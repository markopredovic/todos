{"version":3,"sources":["context/TodosContext.js","components/AddTodoForm.js","helpers.js","components/Todo.js","components/TodoList.js","reducers/todosReducer.js","types.js","App.js","serviceWorker.js","index.js"],"names":["createContext","todos","addTodo","removeTodo","toggleTodo","customStyles","content","top","left","right","bottom","marginRight","transform","width","AddTodoForm","addTodoRef","useRef","priorityTodoRef","typeTodoRef","modalRef","_useState","useState","_useState2","Object","slicedToArray","toggleForm","setToggleForm","_useState3","_useState4","validationErrors","setValidationErrors","context","useContext","todosContext","react_default","a","createElement","Fragment","className","href","onClick","e","preventDefault","onSubmit","todo","id","Date","now","name","current","value","isCompleted","priority","type","errors","length","validate","console","log","keys","style","display","ref","placeholder","lib_default","isOpen","onAfterOpen","color","onRequestClose","map","item","index","key","Todo","_ref","parentId","concat","textDecoration","TodoList","TodosContext","components_Todo","assign","todosReducer","state","action","objectSpread","toConsumableArray","payload","currentTodos","findIndex","splice","toggleTodos","App","_useReducer","useReducer","_useReducer2","dispatch","useEffect","axios","get","then","response","data","result","_todo","push","sort","b","Provider","post","delete","patch","components_AddTodoForm","components_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7be3f576.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext({\n    todos: [],\n    addTodo: () => {},\n    removeTodo: () => {},\n    toggleTodo: () => {}\n})","import React, { useRef, useContext, useState } from \"react\";\nimport Modal from 'react-modal';\nimport todosContext from \"../context/TodosContext\";\nimport { validate } from \"../helpers\";\n\nconst customStyles = {\n  content : {\n    top                   : '20%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)',\n    width                 :  '500px'\n  }\n};\n\n\nconst AddTodoForm = () => {\n  const addTodoRef = useRef(null);\n  const priorityTodoRef = useRef(null);\n  const typeTodoRef = useRef(null);\n  const modalRef = useRef(null)\n  \n  const [toggleForm, setToggleForm] = useState(true)\n  const [validationErrors, setValidationErrors] = useState({});\n\n\n  const context = useContext(todosContext);\n\n  const onFormSubmitHandler = e => {\n    e.preventDefault();\n\n    const todo = {\n      id: Date.now(),\n      name: addTodoRef.current.value,\n      isCompleted: false,\n      priority: priorityTodoRef.current.value,\n      type: typeTodoRef.current.value\n    };\n\n    const errors = validate(todo);\n\n    console.log(errors)\n\n    if(Object.keys(errors).length === 0) {\n      context.addTodo(todo);\n\n      priorityTodoRef.current.value = null;\n      typeTodoRef.current.value = null;\n      addTodoRef.current.value = null;\n    } else {\n        setValidationErrors(errors);\n    }\n\n  };\n\n  const toggleFormHandler = (e) => {\n    e.preventDefault();\n\n    setToggleForm(!toggleForm);\n  }\n\n  const closeModal = () => {\n    setValidationErrors({});\n  }\n\n  const afterOpenModal = () => {\n    modalRef.current.style.color = '#000';\n  }\n\n  return (\n    <>\n    <div className=\"addTodoForm\">\n      <a href=\"#\" className=\"btn btn-toggle\" onClick={toggleFormHandler} >\n      {toggleForm === true ? 'Hide' : 'Show'} form\n      </a>\n      <form onSubmit={onFormSubmitHandler} style={{display: toggleForm ? 'block' : 'none'}}>\n        <div className=\"l-field\">\n          <select ref={priorityTodoRef}>\n            <option value=\"null\">Select Priority:</option>\n            <option value=\"A\">A</option>\n            <option value=\"B\">B</option>\n            <option value=\"C\">C</option>\n          </select>\n          <select ref={typeTodoRef}>\n            <option value=\"null\">Select Type:</option>\n            <option value=\"common\">Common</option>\n            <option value=\"learning\">Learning</option>\n            <option value=\"reminder\">Reminder</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </div>\n        <div className=\"l-field\">\n          <input type=\"text\" placeholder=\"add todo...\" ref={addTodoRef} />\n          <button type=\"submit\">add todo</button>\n        </div>\n      </form>\n    </div>\n    <Modal\n      isOpen={Object.keys(validationErrors).length > 0}\n      onAfterOpen = {afterOpenModal}\n      onRequestClose = {closeModal}\n      style={customStyles}\n    >\n      <div ref={modalRef}>\n        <h3>Validation errors</h3>\n        <ul>\n          {Object.keys(validationErrors).map((item, index) => <li key={index}>{validationErrors[item]}</li>)}\n        </ul>\n      </div>\n    </Modal>\n    </>\n  );\n};\n\nexport default AddTodoForm;\n","const validate = todo  => {\n    let errors = {}\n\n    if(todo.name.length === 0) {\n        errors.name = 'Insert todo text'\n    }\n    if(todo.priority === 'null') {\n        errors.priority = 'Select priority'\n    }\n\n    return errors;\n}\n\n\nexport { validate }","import React, { useContext } from 'react';\nimport todosContext from '../context/TodosContext'\n\n\nconst Todo = ({id, priority, type, name, isCompleted, parentId }) => {\n\n    const context = useContext(todosContext)\n\n    return(\n        <div className={`l-todo m-todo ${priority === 'A' ? 'priority-a' : priority === 'B' ? 'priority-b' : 'priority-c'}`}>\n            <span className=\"description\" onClick={() => context.toggleTodo({id, priority, type, name, isCompleted: !isCompleted, parentId})} style={{textDecoration: isCompleted ? 'line-through' : 'inherit'}}>{name}</span>\n            <button onClick={() => context.removeTodo(parentId)}><span className=\"close\">&#10006;</span></button>\n        </div>\n    )\n}\n\nexport default Todo;","import React, { useContext } from 'react';\nimport TodosContext from '../context/TodosContext'\nimport Todo from './Todo'\n\nconst TodoList = () => {\n\n    const context = useContext(TodosContext);\n\n    let todos = 'Loading...';\n\n    if(context.todos) {\n        todos = context.todos.map((todo, index) => <Todo key={index} {...todo}/>);\n    }\n\n    return(\n        <div className=\"l-todoList\">{todos}</div>\n    )\n}\n\nexport default TodoList;","import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO, GET_LIST } from '../types';\n\n\nexport default (state, action) => {\n    switch(action.type) {\n        case ADD_TODO:\n            return {\n                ...state,\n                todos: [...state.todos, action.payload]\n            }\n        case REMOVE_TODO:\n            return removeTodo(state, action.payload)\n        case TOGGLE_TODO:\n            return toggleTodo(state, action.payload)\n        case GET_LIST:\n            return {\n                ...state,\n                todos: action.payload\n            }\n        default: \n            return state;\n    }\n}\n\nconst removeTodo = (state, parentId) => {\n    let currentTodos = [...state.todos];\n    const index = currentTodos.findIndex(todo => todo.parentId === parentId);\n    currentTodos.splice(index, 1);\n\n    return {\n        ...state,\n        todos: currentTodos\n    }\n}\n\nconst toggleTodo = (state, todo) => {\n    const toggleTodos = [...state.todos].map(current => current.id === todo.id ? {id: current.id, priority: current.priority, type: current.type, name: current.name, isCompleted: todo.isCompleted, parentId: current.parentId} : current);\n    \n    return {\n        ...state,\n        todos: toggleTodos\n    }\n}\n\n","const ADD_TODO = 'ADD_TODO';\nconst REMOVE_TODO = 'REMOVE_TODO';\nconst TOGGLE_TODO = 'TOGGLE_TODO';\nconst GET_LIST = 'GET_LIST';\n\n\nexport { ADD_TODO, REMOVE_TODO, TOGGLE_TODO, GET_LIST };","import React, { useEffect, useReducer } from \"react\";\nimport \"./styles/styles.scss\";\nimport AddTodoForm from \"./components/AddTodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport TodosContext from \"./context/TodosContext\";\nimport todosReducer from \"./reducers/todosReducer\";\nimport { ADD_TODO, REMOVE_TODO, TOGGLE_TODO, GET_LIST } from \"./types\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const initialState = {\n    todos: [{ id: 1, name: \"REact learning\", isCompleted: false }]\n  };\n\n  const [state, dispatch] = useReducer(todosReducer, initialState);\n\n  useEffect(() => {\n    axios\n      .get(\"https://react-proba.firebaseio.com/todos.json\")\n      .then(response => response.data)\n      .then(todos => {\n        let result = [];\n\n        for (const todo in todos) {\n          let _todo = todos[todo];\n          _todo.parentId = todo;\n          result.push(_todo);\n        }\n\n        // sort todos by priority\n        result.sort((a, b) => {\n          if (a.priority < b.priority) {\n            return -1;\n          }\n\n          if (a.priority > b.priority) {\n            return 1;\n          }\n\n          return 0;\n        });\n\n        dispatch({\n          type: GET_LIST,\n          payload: result\n        });\n      });\n  }, []);\n\n  const addTodo = todo => {\n    axios\n      .post(\"https://react-proba.firebaseio.com/todos.json\", {\n        id: todo.id,\n        priority: todo.priority,\n        type: todo.type,\n        name: todo.name,\n        isCompleted: false\n      })\n      .then(response => response.data)\n      .then(data => {\n        todo.parentId = data.name;\n        dispatch({\n          type: ADD_TODO,\n          payload: todo\n        });\n      });\n  };\n\n  const removeTodo = parentId => {\n    axios\n      .delete(`https://react-proba.firebaseio.com/todos/${parentId}.json`)\n      .then(() => {\n        dispatch({\n          type: REMOVE_TODO,\n          payload: parentId\n        });\n      });\n  };\n\n  const toggleTodo = todo => {\n    axios\n      .patch(`https://react-proba.firebaseio.com/todos/${todo.parentId}.json`, {\n        isCompleted: todo.isCompleted\n      })\n      .then(() => {\n        dispatch({\n          type: TOGGLE_TODO,\n          payload: todo\n        });\n      });\n  };\n\n  return (\n    <TodosContext.Provider\n      value={{ todos: state.todos, addTodo, removeTodo, toggleTodo }}\n    >\n      <div className=\"l-app-todo\">\n        <h1 className=\"title-page\">Todo list</h1>\n        <AddTodoForm />\n        <TodoList />\n      </div>\n    </TodosContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}